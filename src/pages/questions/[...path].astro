---
import MathJax from "@components/MathJax.svelte";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const questions = await getCollection("questions");
  return questions.map((page) => {
    return {
      params: { path: page.slug },
      props: { page },
    };
  });
}

const { path } = Astro.params;
const { page } = Astro.props;
const { Content } = await page.render();

// load the generator
const module = await import(`../../content/questions/${page.data.generator}`);
const klass = new module.default();
const generatedQuestion = klass.generateQuestion();

// load the question
const data = await import(`../../content/questions/${page.data.question}`);

// load markdown solution
const solutionString = `../../content/questions/${page.data.solution}`;
const solutionFile = await import(solutionString);
const SolutionComponent = solutionFile.default;
---

<div>Question Path: {path}</div>

<h1>question.ts</h1>
<div>{data.question.body}</div>
<div>
  Options: {
    data.question.options.map((option: any, index: number) => (
      <div style="display:flex">
        <div>{option.label}</div>
        <div>{option.correct ? "Correct" : "Incorrect"}</div>
      </div>
    ))
  }

  <h1>generator.ts</h1>
  <div>Ok: {generatedQuestion.body}</div>
  <div>
    Options: {
      generatedQuestion.options.map((option: any, index: number) => (
        <div style="display:flex">
          <button
            class="generated-question-option"
            id={`generated-question-option-${index}`}
          >
            Pick
          </button>
          <div>{option.label}</div>
          <div
            id={`generated-question-option-${index}-answer`}
            style="display:none"
          >
            {option.correct ? "Correct" : "Incorrect"}
          </div>
        </div>
      ))
    }
  </div>
  <button onclick="window.location.reload();">Regenerate</button>

  <script>
    function handleClick() {
      // @ts-ignore
      document.getElementById(this.id + "-answer").style.display = "block";
    }
    // @ts-ignore
    const options = document.getElementsByClassName(
      "generated-question-option",
    );
    Array.from(options).forEach((option) => {
      option.addEventListener("click", handleClick);
    });
  </script>

  <h1>index.md</h1>
  <Content />

  <h1>solution.md</h1>
  <SolutionComponent />

  <MathJax client:load />
</div>
