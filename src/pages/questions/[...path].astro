---
import MathJax from "@components/MathJax.svelte";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const questions = await getCollection("questions");
  return questions.map((page) => {
    return {
      params: { path: page.slug },
      props: { page },
    };
  });
}

const { path } = Astro.params;
const { page } = Astro.props;
const { Content } = await page.render();

// load the generator
const module = await import(`../../content/questions/${page.data.generator}`);
const klass = new module.default();
const defaultQuestion = klass.getQuestion();
const generatedQuestion = klass.generateQuestion();

// load markdown solution
const solutionString = `../../content/questions/${page.data.solution}`;
const solutionFile = await import(solutionString);
const SolutionComponent = solutionFile.default;

const questions = await getCollection("questions");
---

<!-- <div>
  {
    questions.map((page) => (
      // return {
      //   params: { path: page.slug },
      //   props: { page },
      // };
      <div>{page.slug}</div>
    ))
  }
</div> -->
<div>Question Path: {path}!</div>

<h1>generator.ts</h1>
<button onclick="window.location.reload();">Regenerate</button>

<h2>Default Question</h2>
<div>{defaultQuestion.body}</div>

<h2>Generated Question</h2>
<div>Ok: {generatedQuestion.body}</div>
<div>
  Options: {
    generatedQuestion.options.map((option: any, index: number) => (
      <div style="display:flex">
        <button
          class="generated-question-option"
          id={`generated-question-option-${index}`}
        >
          Pick
        </button>
        <div>{option.label}</div>
        <div
          id={`generated-question-option-${index}-answer`}
          style="display:none"
        >
          {option.correct ? "Correct" : "Incorrect"}
        </div>
      </div>
    ))
  }
</div>

<script>
  function handleClick() {
    // @ts-ignore
    document.getElementById(this.id + "-answer").style.display = "block";
  }
  // @ts-ignore
  const options = document.getElementsByClassName("generated-question-option");
  Array.from(options).forEach((option) => {
    option.addEventListener("click", handleClick);
  });
</script>

<h1>index.mdx</h1>
<Content />

<h1>solution.md</h1>
<SolutionComponent />

<MathJax client:load />
